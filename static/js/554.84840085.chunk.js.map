{"version":3,"file":"static/js/554.84840085.chunk.js","mappings":"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","sources":["modules/PhoneBook/PhoneBookForm/fields.js","modules/PhoneBook/PhoneBookForm/initial-state.js","modules/PhoneBook/PhoneBookForm/add-contact-schema.js","modules/PhoneBook/PhoneBookForm/PhoneBookForm.jsx","modules/PhoneBook/ContsctListItem/ContactListItem.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","modules/PhoneBook/ContactList/ContactList.jsx","modules/PhoneBook/PhoneBookFilter/PhoneBookFilter.jsx","modules/PhoneBook/PhoneBook.styled.jsx","modules/PhoneBook/PhoneBook.jsx","pages/PhoneBookPage/PhoneBookPage.jsx","shared/components/BgWrap/BgWrap.styled.jsx","shared/components/PageWrap/PageWrap.styled.jsx","shared/components/StyledError/StyledError.jsx","shared/components/StyledForm/StyledForm.styled.jsx","shared/components/TextField/TextField.styled.jsx","shared/components/TextField/TextField.jsx"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    label: 'Name',\n    placeholder: 'Name',\n  },\n  phone: {\n    type: 'tel',\n    name: 'phone',\n    label: 'Phone',\n    placeholder: 'Phone',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  name: '',\n  phone: '',\n};\n\nexport default initialState;\n","import { object, string } from 'yup';\n\nconst phoneRegex = /(?=.*\\+[0-9]{3}\\s?[0-9]{2}\\s?[0-9]{3}\\s?[0-9]{4,5}$)/gm;\n\nconst addContactSchema = object({\n  name: string().required('Enter a name'),\n  phone: string()\n    .matches(phoneRegex, 'Phone must be in this format: \"+380XXXXXXXXX\"')\n    .required('Enter a phone'),\n});\n\nexport default addContactSchema;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport Box from 'shared/components/Box/Box';\nimport TextField from 'shared/components/TextField/TextField';\nimport Button from 'shared/components/Button/Button.styled';\nimport { StyledForm } from 'shared/components/StyledForm/StyledForm.styled';\nimport StyledError from 'shared/components/StyledError/StyledError';\n\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\n\nimport fields from './fields';\nimport initialState from './initial-state';\nimport addContactSchema from './add-contact-schema';\n\nconst PhoneBookForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(fetchAddContact(values));\n\n    resetForm();\n  };\n\n  const { name, phone } = fields;\n\n  return (\n    <Box mt={10}>\n      <Formik\n        initialValues={initialState}\n        onSubmit={onSubmit}\n        validationSchema={addContactSchema}\n      >\n        {({ errors }) => (\n          <StyledForm>\n            <TextField\n              {...name}\n              bordercolor={errors.name ? '#ff002b' : '#bec02a'}\n            />\n            <ErrorMessage name={name.name} component={StyledError} />\n\n            <TextField\n              {...phone}\n              bordercolor={errors.phone ? '#ff002b' : '#bec02a'}\n            />\n            <ErrorMessage name={phone.name} component={StyledError} />\n            <Button type=\"submit\">Add contact</Button>\n          </StyledForm>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default PhoneBookForm;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport Box from 'shared/components/Box/Box';\nimport Button from 'shared/components/Button/Button.styled';\n\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box\n      display=\"flex\"\n      gridGap={10}\n      as=\"li\"\n      alignItems=\"center\"\n      color=\"#d3d3d3\"\n    >\n      {name}: {number}\n      <Button onClick={() => dispatch(fetchDeleteContact(id))} type=\"button\">\n        delete\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","export const getContacts = ({ contacts: { items } }) => items;\n\nexport const getFilteredContacts = ({ filter, contacts: { items } }) => {\n  const normilizedEnteredName = filter.toLowerCase();\n\n  if (!filter) return items;\n\n  return items?.filter(({ name }) =>\n    name.toLowerCase().includes(normilizedEnteredName)\n  );\n};\n\nexport const getIsLoading = ({ contacts: { isLoading } }) => isLoading;\n\nexport const getError = ({ contacts: { error } }) => error;\n","export const getFilter = ({ filter }) => filter;\n","import { useSelector } from 'react-redux';\nimport { TailSpin } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\n\nimport ContactListItem from '../ContsctListItem/ContactListItem';\nimport Box from 'shared/components/Box/Box';\n\nimport {\n  getFilteredContacts,\n  getContacts,\n  getIsLoading,\n  getError,\n} from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getIsLoading);\n  const isError = useSelector(getError);\n\n  return (\n    <>\n      {contacts?.length > 0 && (\n        <>\n          <h3>Contacts</h3>\n          <Box\n            as=\"ul\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"flex-end\"\n            gridGap={10}\n            mt={10}\n          >\n            {filteredContacts?.map(({ name, id, number }) => (\n              <ContactListItem key={id} name={name} number={number} id={id} />\n            ))}\n          </Box>\n        </>\n      )}\n\n      {isLoading && (\n        <TailSpin\n          height=\"30\"\n          width=\"30\"\n          color=\"#d3d3d3\"\n          wrapperClass=\"spinner\"\n        />\n      )}\n\n      {contacts?.length === 0 && !isLoading && (\n        <p>You haven`t any contacts added yet</p>\n      )}\n\n      {Boolean(filter && !filteredContacts.length) && <p>No matches found</p>}\n\n      {isError &&\n        !isLoading &&\n        toast.error('Oops, something went wrong, please reload the page.', {\n          position: toast.POSITION.TOP_RIGHT,\n        })}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport TextField from 'shared/components/TextField/TextField';\n\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { StyledForm } from 'shared/components/StyledForm/StyledForm.styled';\n\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\n\nconst PhoneBookFilter = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {contacts?.length > 0 && (\n        <Formik>\n          <StyledForm>\n            <TextField\n              label=\"Find contacts\"\n              onChange={({ target }) => dispatch(setFilter(target.value))}\n              name=\"filter\"\n              value={filter}\n              placeholder=\"Filter\"\n              type=\"text\"\n            />\n          </StyledForm>\n        </Formik>\n      )}\n    </>\n  );\n};\n\nexport default PhoneBookFilter;\n","import styled from '@emotion/styled';\n\nexport const ContactWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 10px;\n  padding: 40px 40px;\n  background-color: rgba(0, 0, 0, 0.9);\n  border-radius: 10px;\n  width: 474px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 474px) {\n    width: 350px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport PhoneBookForm from './PhoneBookForm/PhoneBookForm';\nimport ContactList from './ContactList/ContactList';\nimport PhoneBookFilter from './PhoneBookFilter/PhoneBookFilter';\n\nimport { ContactWrap } from './PhoneBook.styled';\n\nimport { fetchAllContacts } from 'redux/contacts/contacts-operations';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <PhoneBookForm />\n      <ContactWrap>\n        <PhoneBookFilter />\n        <ContactList />\n      </ContactWrap>\n    </>\n  );\n};\n\nexport default PhoneBook;\n","import PhoneBook from 'modules/PhoneBook/PhoneBook';\n\nimport BgWrap from 'shared/components/BgWrap/BgWrap.styled';\nimport PageWrap from 'shared/components/PageWrap/PageWrap.styled';\n\nimport bgImg from 'shared/images/phone-book-page-bg.jpg';\n\nconst PhoneBookPage = () => {\n  return (\n    <BgWrap bgImg={bgImg} bgSize=\"100%\" bgColor=\"#7c2e0a\">\n      <PageWrap>\n        <PhoneBook />\n      </PageWrap>\n    </BgWrap>\n  );\n};\n\nexport default PhoneBookPage;\n","import styled from '@emotion/styled';\n\nconst BgWrap = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 100;\n\n  background-image: url(${({ bgImg }) => bgImg});\n  background-size: ${({ bgSize }) => bgSize};\n  background-repeat: no-repeat;\n  background-color: ${({ bgColor = '#fff' }) => bgColor};\n\n  width: 100%;\n  min-height: 800px;\n`;\n\nexport default BgWrap;\n","import styled from '@emotion/styled';\n\nconst PageWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 800px;\n  padding: 100px 15px;\n`;\n\nexport default PageWrap;\n","import styled from '@emotion/styled';\n\nconst StyledError = styled.p`\n  font-size: 12px;\n  font-weight: bold;\n  display: flex;\n  align-self: flex-start;\n  margin-left: 20px;\n  color: #ff002b;\n`;\n\nexport default StyledError;\n","import { Form } from 'formik';\nimport styled from '@emotion/styled';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n\n  width: 474px;\n  padding: 40px;\n  background-color: rgba(0, 0, 0, 0.9);\n  border-radius: 10px;\n\n  @media screen and (max-width: 474px) {\n    max-width: 350px;\n  }\n`;\n","import { Field } from 'formik';\nimport styled from '@emotion/styled';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 40px;\n\n  padding-left: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border: 1px solid;\n  border-color: ${({ bordercolor }) => bordercolor};\n  border-radius: 10px;\n  background-color: transparent;\n  color: #d3d3d3;\n\n  &::placeholder {\n    color: #d3d3d3;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: bold;\n  color: #bec02a;\n\n  margin-bottom: 5px;\n`;\n","import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\n\nimport Box from '../Box/Box';\nimport { Input, Label } from 'shared/components/TextField/TextField.styled';\n\nconst TextField = ({ label, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gridGap=\"2px\">\n      <Label htmlFor={id}>{label}</Label>\n      <Input id={id} {...props} />\n    </Box>\n  );\n};\n\nexport default TextField;\n"],"names":["name","type","label","placeholder","phone","object","string","required","matches","dispatch","useDispatch","fields","Box","mt","initialValues","initialState","onSubmit","values","resetForm","fetchAddContact","validationSchema","addContactSchema","errors","TextField","bordercolor","component","StyledError","number","id","display","gridGap","as","alignItems","color","onClick","fetchDeleteContact","getContacts","contacts","items","getFilteredContacts","filter","normilizedEnteredName","toLowerCase","includes","getIsLoading","isLoading","getError","error","getFilter","filteredContacts","useSelector","isError","length","flexDirection","map","height","width","wrapperClass","Boolean","toast","position","onChange","target","setFilter","value","ContactWrap","styled","useEffect","fetchAllContacts","bgImg","bgSize","bgColor","BgWrap","PageWrap","StyledForm","Form","Input","Field","Label","props","useMemo","nanoid","htmlFor"],"sourceRoot":""}