{"version":3,"file":"static/js/637.99d53b86.chunk.js","mappings":"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","sources":["modules/PhoneBook/PhoneBookForm/fields.js","modules/PhoneBook/PhoneBookForm/initial-state.js","modules/PhoneBook/PhoneBookForm/PhoneBookForm.jsx","modules/PhoneBook/ContsctListItem/ContactListItem.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","modules/PhoneBook/ContactList/ContactList.jsx","modules/PhoneBook/PhoneBookFilter/PhoneBookFilter.jsx","modules/PhoneBook/PhoneBook.jsx","pages/PhoneBookPage/PhoneBookPage.jsx","shared/components/TextField/TextField.styled.jsx","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.js"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    required: true,\n    label: 'Name',\n    placeholder: 'Name',\n  },\n  phone: {\n    type: 'tel',\n    name: 'phone',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    required: true,\n    label: 'Phone',\n    placeholder: 'Phone',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  name: '',\n  phone: '',\n};\n\nexport default initialState;\n","import Box from 'shared/components/Box/Box';\nimport TextField from 'shared/components/TextField/TextField';\nimport Button from 'shared/components/Button/Button.styled';\n\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\nimport useForm from 'shared/hooks/useForm';\nimport fields from './fields';\nimport initialState from './initial-state';\n\nconst PhoneBookForm = () => {\n  const { state, handleChange, onSubmit } = useForm(\n    initialState,\n    fetchAddContact\n  );\n  const { name, phone } = state;\n\n  return (\n    <Box mt={10}>\n      <Box\n        as=\"form\"\n        onSubmit={onSubmit}\n        display=\"flex\"\n        gridGap={10}\n        flexDirection=\"column\"\n        pt={40}\n        pb={40}\n        pr={100}\n        pl={100}\n        bg=\"rgba(0, 0, 0, 0.9)\"\n        borderRadius={4}\n      >\n        <TextField handleChange={handleChange} value={name} {...fields.name} />\n        <TextField\n          handleChange={handleChange}\n          value={phone}\n          {...fields.phone}\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PhoneBookForm;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport Box from 'shared/components/Box/Box';\nimport Button from 'shared/components/Button/Button.styled';\n\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box\n      display=\"flex\"\n      gridGap={10}\n      as=\"li\"\n      alignItems=\"center\"\n      color=\"#d3d3d3\"\n    >\n      {name}: {number}\n      <Button onClick={() => dispatch(fetchDeleteContact(id))} type=\"button\">\n        delete\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","export const getContacts = ({ contacts: { items } }) => items;\n\nexport const getFilteredContacts = ({ filter, contacts: { items } }) => {\n  const normilizedEnteredName = filter.toLowerCase();\n\n  if (!filter) return items;\n\n  return items?.filter(({ name }) =>\n    name.toLowerCase().includes(normilizedEnteredName)\n  );\n};\n\nexport const getIsLoading = ({ contacts: { isLoading } }) => isLoading;\n\nexport const getError = ({ contacts: { error } }) => error;\n","export const getFilter = ({ filter }) => filter;\n","import { useSelector } from 'react-redux';\nimport { TailSpin } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\n\nimport ContactListItem from '../ContsctListItem/ContactListItem';\nimport Box from 'shared/components/Box/Box';\n\nimport {\n  getFilteredContacts,\n  getContacts,\n  getIsLoading,\n  getError,\n} from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getIsLoading);\n  const isError = useSelector(getError);\n\n  return (\n    <>\n      {contacts?.length > 0 && (\n        <>\n          <h3>Contacts</h3>\n          {/* <Box display=\"flex\" justifyContent=\"center\"> */}\n          <Box\n            as=\"ul\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"flex-end\"\n            gridGap={10}\n            mt={10}\n          >\n            {filteredContacts?.map(({ name, id, number }) => (\n              <ContactListItem key={id} name={name} number={number} id={id} />\n            ))}\n          </Box>\n          {/* </Box> */}\n        </>\n      )}\n\n      {isLoading && (\n        <TailSpin\n          height=\"30\"\n          width=\"30\"\n          color=\"#d3d3d3\"\n          wrapperClass=\"spinner\"\n        />\n      )}\n\n      {contacts?.length === 0 && !isLoading && (\n        <p>You haven`t any contacts added yet</p>\n      )}\n\n      {Boolean(filter && !filteredContacts.length) && <p>No matches found</p>}\n\n      {isError &&\n        !isLoading &&\n        toast.error('Oops, something went wrong, please reload the page.', {\n          position: toast.POSITION.TOP_RIGHT,\n        })}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport TextField from 'shared/components/TextField/TextField';\n\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\n\nconst PhoneBookFilter = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {contacts?.length > 0 && (\n        <TextField\n          label=\"Find contacts\"\n          handleChange={({ target }) => dispatch(setFilter(target.value))}\n          name=\"filter\"\n          value={filter}\n          placeholder=\"Filter\"\n          type=\"text\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default PhoneBookFilter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport PhoneBookForm from './PhoneBookForm/PhoneBookForm';\nimport ContactList from './ContactList/ContactList';\nimport PhoneBookFilter from './PhoneBookFilter/PhoneBookFilter';\nimport Box from 'shared/components/Box/Box';\n\nimport { fetchAllContacts } from 'redux/contacts/contacts-operations';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      as=\"section\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      pt={15}\n      pl={15}\n      pr={15}\n      pb={15}\n    >\n      <h2>Phonebook</h2>\n      <PhoneBookForm />\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        gridGap={10}\n        pt={40}\n        pb={40}\n        pr={100}\n        pl={100}\n        bg=\"rgba(0, 0, 0, 0.9)\"\n        borderRadius={4}\n        width={474}\n        mt={10}\n      >\n        <PhoneBookFilter />\n        <ContactList />\n      </Box>\n    </Box>\n  );\n};\n\nexport default PhoneBook;\n","import PhoneBook from 'modules/PhoneBook/PhoneBook';\n\nconst PhoneBookPage = () => {\n  return <PhoneBook />;\n};\n\nexport default PhoneBookPage;\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 250px;\n  padding-left: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border: 1px solid #bec02a;\n  border-radius: 4px;\n  background-color: transparent;\n  color: #d3d3d3;\n\n  &::placeholder {\n    color: #d3d3d3;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: bold;\n  color: #bec02a;\n`;\n","import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '../Box/Box';\nimport { Input, Label } from 'shared/components/TextField/TextField.styled';\n\nconst TextField = ({ handleChange, value, label, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gridGap=\"2px\">\n      <Label htmlFor={id}>{label}</Label>\n      <Input onChange={handleChange} value={value} id={id} {...props} />\n    </Box>\n  );\n};\n\nexport default TextField;\n\nTextField.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  required: PropTypes.bool,\n  title: PropTypes.string,\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst useForm = (initialState, operation) => {\n  const [state, setState] = useState(initialState);\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    setState(prevState => ({ ...prevState, [target.name]: target.value }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    dispatch(operation(state));\n\n    setState(initialState);\n  };\n\n  return { state, setState, handleChange, onSubmit };\n};\n\nexport default useForm;\n"],"names":["name","type","pattern","title","required","label","placeholder","phone","useForm","initialState","fetchAddContact","state","handleChange","onSubmit","Box","mt","as","display","gridGap","flexDirection","pt","pb","pr","pl","bg","borderRadius","TextField","value","fields","number","id","dispatch","useDispatch","alignItems","color","onClick","fetchDeleteContact","getContacts","contacts","items","getFilteredContacts","filter","normilizedEnteredName","toLowerCase","includes","getIsLoading","isLoading","getError","error","getFilter","filteredContacts","useSelector","isError","length","map","height","width","wrapperClass","Boolean","toast","position","target","setFilter","useEffect","fetchAllContacts","Input","styled","Label","props","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","operation","useState","setState","prevState","e","preventDefault"],"sourceRoot":""}